FROM debian:buster as gn

RUN set -eux; \
    \
    apt-get update; \
    apt-get install -qqy --no-install-recommends \
        ca-certificates git \
        clang python ninja-build \
        libclang-dev libc++-dev \
        ; \
    rm -rf /var/lib/apt/lists/*

WORKDIR /tmp

RUN set -eux; \
    \
    git clone https://gn.googlesource.com/gn; \
    cd gn; \
    git checkout 501b49a3; \
    python build/gen.py; \
    ninja -v -C out; \
    out/gn_unittests; \
    mkdir -p /gn; \
    cp /tmp/gn/out/gn /gn/gn; \
    /gn/gn --version;

FROM golang:1.15 AS bazel

RUN set -eux; \
    \
    case $(uname -m) in \
        x86_64) export BAZEL_BIN_URL=https://github.com/bazelbuild/bazelisk/releases/download/v1.6.1/bazelisk-linux-amd64;; \
        aarch64) export BAZEL_BIN_URL=https://github.com/Tick-Tocker/bazelisk-arm64/releases/download/arm64/bazelisk-linux-arm64;; \
        *) echo "unsupported architecture"; exit 1 ;; \
    esac; \
    \
    wget -O /usr/local/bin/bazel ${BAZEL_BIN_URL}; \
    chmod +x /usr/local/bin/bazel

RUN go get github.com/bazelbuild/buildtools/buildifier
RUN go get github.com/bazelbuild/buildtools/buildozer

FROM busybox AS llvm-src

ENV LLVM_VERSION=9.0.0
ENV LLVM_PATH=/usr/lib/llvm-9

WORKDIR /tmp

RUN set -eux; \
    \
    case $(uname -m) in \
        x86_64) export LLVM_RELEASE=clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-18.04;; \
        aarch64) export LLVM_RELEASE=clang+llvm-${LLVM_VERSION}-aarch64-linux-gnu;; \
        *) echo "unsupported architecture"; exit 1 ;; \
    esac; \
    \
    wget -O ${LLVM_RELEASE}.tar.xz "https://releases.llvm.org/${LLVM_VERSION}/${LLVM_RELEASE}.tar.xz"; \
    \
    tar -Jxf ${LLVM_RELEASE}.tar.xz; \
    mkdir -p ${LLVM_PATH}; \
    ls ./${LLVM_RELEASE}; \
    cp -R ${LLVM_RELEASE}/* ${LLVM_PATH}/; \
    chown -R root:root ${LLVM_PATH}; \
    rm -R /tmp/*

FROM ubuntu:18.04

ENV DEBIAN_FRONTEND noninteractive

RUN set -eux; \
    \
    apt-get update; \
    apt-get install -y \
    build-essential \
    apt-utils \
    unzip \
    git \
    make \
    cmake \
    automake \
    autoconf \
    libtool \
    virtualenv \
    python \
    vim \
    g++ \
    wget \
    ninja-build \
    curl \
    lsb-core \
    openjdk-11-jdk \
    software-properties-common \
    ; \
    rm -rf /var/lib/apt/lists/*;

# bazel
COPY --from=bazel /usr/local/bin/bazel /usr/local/bin/bazel
COPY --from=bazel /go/bin/buildifier /usr/local/bin/buildifier
COPY --from=bazel /go/bin/buildozer /usr/local/bin/buildozer

# gn
COPY --from=gn /gn/gn /usr/local/bin/gn

# llvm-9
ENV LLVM_VERSION=9.0.0
ENV LLVM_PATH=/usr/lib/llvm-9

COPY --from=llvm-src ${LLVM_PATH} ${LLVM_PATH}

RUN echo "${LLVM_PATH}/lib" > /etc/ld.so.conf.d/llvm.conf && ldconfig;

ENV PATH="${LLVM_PATH}/bin:${PATH}"
